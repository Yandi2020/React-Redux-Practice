{"version":3,"sources":["pokeball.png","components/Navbar.js","components/Home.js","components/About.js","hoc/Rainbow.js","components/Contact.js","components/Post.js","actions/postActions.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["module","exports","withRouter","className","to","Home","console","log","this","props","posts","postList","length","map","post","key","id","src","Pokeball","title","body","Component","connect","state","Rainbow","WrappedComponent","Math","floor","random","Contact","setTimeout","history","push","Post","handleClick","deletePost","onClick","ownProps","match","params","post_id","find","dispatch","type","App","exact","path","component","About","Boolean","window","location","hostname","initState","rootReducer","action","newPosts","filter","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.47fd0311.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball.f10bf078.png\";","import React from 'react'\nimport {Link, NavLink, withRouter} from 'react-router-dom'\n\n\nconst Navbar = () => {\n    \n    return (\n        <nav className=\"nav-wrapper red darken-3\">\n            <div className=\"container\">\n                <a className=\"brand-logo\">Poketimes</a>\n                <ul className=\"right\">\n                    <li><Link to=\"/\">Home</Link></li>\n                    <li><Link to=\"/about\">About</Link></li>\n                    <li><Link to=\"/contact\">Contact</Link></li>\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default withRouter(Navbar)\n\n\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport Pokeball from '../pokeball.png'\nimport { connect } from 'react-redux'\n\nclass Home extends Component{\n\n    render(){\n        console.log(this.props);\n\n        const { posts } = this.props;\n\n        const postList = posts.length ? (\n            posts.map(post => {\n                return(\n                    <div className=\"post card\" key={post.id}>\n                        <img src={Pokeball} />\n\n                        <div className=\"card-content\">\n                            <Link to={'/' + post.id} >\n                                <span className=\"card-title\">{post.title}</span>\n                            </Link>\n                            <p>{post.body}</p>\n                        </div>\n                    </div>\n                )\n            })\n        ) : (\n            <div className=\"center\">No Posts Yet</div>\n        );\n\n        return(\n            <div className=\"container home\">\n                {postList}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        posts: state.posts\n    }\n}\n\nexport default connect(mapStateToProps)(Home)\n\n","import React from 'react'\nimport Rainbow from '../hoc/Rainbow'\n\nconst About = () => {\n    return(\n        <div className=\"container\">\n            <h4 className=\"center\">About</h4>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n        </div>\n    )\n}\n\nexport default Rainbow(About)\n\n","import React from 'react'\n\nconst Rainbow = (WrappedComponent) => {\n\n    const colors = ['red', 'orange', 'yellow', 'green', 'blue', 'purple'];\n    const randomColor = colors[Math.floor(Math.random()*5)];\n    const className = randomColor + '-text';\n\n    return(props) => {\n        return(\n            <div className={className}>\n                <WrappedComponent {...props} />\n            </div>\n        )\n    }\n}\n\nexport default Rainbow \n\n","import React from 'react'\n\nconst Contact = (props) => {\n    setTimeout(() => {\n        props.history.push('/about')\n    }, 3000);\n\n    return(\n        <div className=\"container\">\n            <h4 className=\"center\">Contact</h4>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n        </div>\n    )\n}\n\nexport default Contact","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {deletePost} from '../actions/postActions'\n\nclass Post extends Component{\n    handleClick = () => {\n        this.props.deletePost(this.props.post.id);\n        this.props.history.push('/');\n    }\n\n    render(){\n        console.log(this.props);\n        const post = this.props.post ? (\n            <div className=\"post\">\n                <h4 className=\"center\">{this.props.post.title}</h4>\n                <p>{this.props.post.body}</p>\n                <div className=\"center\">\n                    <button className=\"btn grey\" onClick={this.handleClick}>Delete Post</button>\n                </div>\n            </div>\n        ) : (\n            <div className=\"center\">Loading Post ...</div>\n        )\n\n        return(\n            <div className=\"container\">\n                {post}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    let id = ownProps.match.params.post_id;\n    \n    return{\n        post: state.posts.find(post => post.id === id)\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        deletePost: (id) => { dispatch(deletePost(id)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post)","export const deletePost = (id) => {\n    return{\n        type: 'DELETE_POST',\n        id: id\n    }\n}\n\n","import React, { Component } from 'react';\nimport Navbar from './components/Navbar'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\n\nimport Home from './components/Home'\nimport About from './components/About'\nimport Contact from './components/Contact'\n\nimport Post from './components/Post'\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/about' component={About} />\n            <Route path='/contact' component={Contact} />\n            <Route path='/:post_id' component={Post} />\n          </Switch>\n        </div> \n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n\n\n","\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    posts: [\n        {id: '1', title: 'Example Title 1', body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit' },\n        {id: '2', title: 'Example Title 2', body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit' },\n        {id: '3', title: 'Example Title 3', body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit' }\n    ]\n}\n\nconst rootReducer = (state = initState, action) => {\n\n    if(action.type === 'DELETE_POST'){\n        let newPosts = state.posts.filter(post => {\n            return post.id !== action.id\n        })\n\n        return {\n            ...state,\n            posts: newPosts\n        }\n    }\n\n    return state;    \n}\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\n\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers/rootReducer'\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}> <App /> </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}